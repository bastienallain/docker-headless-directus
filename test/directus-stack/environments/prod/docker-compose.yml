version: '3.8'

services:
  # =================================
  # DATABASE POSTGRESQL
  # =================================
  postgres:
    image: postgres:17.5-alpine
    container_name: directus-prod-postgres
    restart: always
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    secrets:
      - postgres_db
      - postgres_user
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../shared/init-db:/docker-entrypoint-initdb.d:ro
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # =================================
  # REDIS POUR LE CACHE
  # =================================
  redis:
    image: redis:7-alpine
    container_name: directus-prod-redis
    restart: always
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --tcp-backlog 511
      --timeout 300
      --tcp-keepalive 60
    volumes:
      - redis_data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  # =================================
  # DIRECTUS CMS
  # =================================
  directus:
    image: directus/directus:latest
    container_name: directus-prod
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Base de données
      DB_CLIENT: pg
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE_FILE: /run/secrets/postgres_db
      DB_USER_FILE: /run/secrets/postgres_user
      DB_PASSWORD_FILE: /run/secrets/postgres_password
      DB_SSL: "true"

      # Configuration générale
      KEY_FILE: /run/secrets/directus_key
      SECRET_FILE: /run/secrets/directus_secret

      # Admin utilisateur (première installation seulement)
      ADMIN_EMAIL_FILE: /run/secrets/admin_email
      ADMIN_PASSWORD_FILE: /run/secrets/admin_password

      # URLs et CORS
      PUBLIC_URL: ${PUBLIC_URL}
      CORS_ENABLED: "true"
      CORS_ORIGIN: ${CORS_ORIGIN}
      CORS_CREDENTIALS: "true"

      # Cache avec Redis
      CACHE_ENABLED: "true"
      CACHE_STORE: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      # Upload et storage
      STORAGE_LOCATIONS: local
      STORAGE_LOCAL_ROOT: ./uploads

      # Configuration des images et assets
      ASSETS_CACHE_TTL: 30d
      ASSETS_TRANSFORM_IMAGE_MAX_DIMENSION: 4000
      ASSETS_TRANSFORM_IMAGE_QUALITY: 85
      ASSETS_TRANSFORM_IMAGE_FORMAT: auto
      ASSETS_TRANSFORM_IMAGE_TRANSFORMS: key
      ASSETS_REQUIRE_AUTHENTICATION: "true"
      
      # Optimisations upload
      FILES_MAX_UPLOAD_SIZE: 50MB
      FILES_MIME_TYPE_ALLOW_LIST: image/jpeg,image/png,image/webp,image/gif,application/pdf

      # Rate limiting
      RATE_LIMITER_ENABLED: "true"
      RATE_LIMITER_STORE: redis
      RATE_LIMITER_REDIS_HOST: redis
      RATE_LIMITER_REDIS_PASSWORD: ${REDIS_PASSWORD}
      RATE_LIMITER_GLOBAL_RATE: 50
      RATE_LIMITER_GLOBAL_DURATION: 60

      # Email
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_TRANSPORT: smtp
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      EMAIL_SMTP_SECURE: "true"

      # Extensions
      EXTENSIONS_PATH: ./extensions
      EXTENSIONS_AUTO_RELOAD: "false"
      ASSETS_TRANSFORM_MAX_CONCURRENT: 2

      # Logs
      LOG_LEVEL: warn
      LOG_STYLE: json

      # Sécurité
      ACCESS_TOKEN_TTL: 15m
      REFRESH_TOKEN_TTL: 7d
      REFRESH_TOKEN_COOKIE_SECURE: "true"
      REFRESH_TOKEN_COOKIE_SAME_SITE: strict
      REFRESH_TOKEN_COOKIE_NAME: directus_refresh_token
      
      PASSWORD_RESET_URL_ALLOW_LIST: ${PUBLIC_URL}
      USER_INVITE_URL_ALLOW_LIST: ${PUBLIC_URL}

      # Optimisations
      CACHE_TTL: 1h
      CACHE_AUTO_PURGE: "true"
      CACHE_SYSTEM_TTL: 2h
      CACHE_SCHEMA: "true"
      CACHE_PERMISSIONS: "true"
      QUERY_LIMIT_DEFAULT: 100
      QUERY_LIMIT_MAX: 1000

      # Mode production
      NODE_ENV: production

      # Telemetry
      TELEMETRY: "false"

    secrets:
      - postgres_db
      - postgres_user
      - postgres_password
      - directus_key
      - directus_secret
      - admin_email
      - admin_password
    volumes:
      - directus_uploads:/directus/uploads
      - directus_extensions:/directus/extensions
    networks:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8055/server/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # =================================
  # NGINX REVERSE PROXY
  # =================================
  nginx:
    image: nginx:alpine
    container_name: directus-prod-nginx
    restart: always
    depends_on:
      directus:
        condition: service_healthy
    volumes:
      - ../../shared/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../shared/nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_cache:/var/cache/nginx
      - nginx_logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  directus_uploads:
    driver: local
  directus_extensions:
    driver: local
  nginx_cache:
    driver: local
  nginx_logs:
    driver: local

networks:
  backend:
    driver: bridge
    internal: true
  frontend:
    driver: bridge

secrets:
  postgres_db:
    external: true
  postgres_user:
    external: true
  postgres_password:
    external: true
  directus_key:
    external: true
  directus_secret:
    external: true
  admin_email:
    external: true
  admin_password:
    external: true