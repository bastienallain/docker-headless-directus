# Docker Compose pour test local de la prod optimisée (sans secrets)

services:
  # =================================
  # DATABASE POSTGRESQL
  # =================================
  postgres:
    image: postgres:17.5-alpine
    container_name: directus-test-prod-postgres
    restart: always
    environment:
      POSTGRES_DB: directus_test
      POSTGRES_USER: directus_user
      POSTGRES_PASSWORD: test_prod_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
# command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../shared/init-db:/docker-entrypoint-initdb.d:ro
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5433:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U directus_user -d directus_test"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # =================================
  # DRAGONFLY CACHE
  # =================================
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    container_name: directus-test-prod-dragonfly
    restart: always
    ulimits:
      memlock: -1
    command: [
      "dragonfly",
      "--logtostderr",
      "--cache_mode=true",
      "--maxmemory=2GB",
      "--requirepass=test_dragonfly_password_456",
      "--num_shards=0",
      "--conn_io_threads=0",
      "--tcp_nodelay=true",
      "--max_eviction_per_heartbeat=100",
      "--tcp_backlog=1024",
      "--hz=100"
    ]
    volumes:
      - cache_data:/data
    ports:
      - "6380:6379"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "test_dragonfly_password_456", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 3G
        reservations:
          cpus: '0.5'
          memory: 1G

  # =================================
  # DIRECTUS CMS
  # =================================
  directus:
    image: directus/directus:latest
    container_name: directus-test-prod
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      dragonfly:
        condition: service_healthy
    environment:
      # Base de données
      DB_CLIENT: pg
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: directus_test
      DB_USER: directus_user
      DB_PASSWORD: test_prod_password_123
      DB_SSL: "false"

      # Configuration générale
      KEY: 255d861b-5ea1-5996-9aa3-922530ec40b1
      SECRET: 6116487b-cda1-52c2-b5b5-c8022c45e263

      # Admin (première installation)
      ADMIN_EMAIL: admin@test-prod.local
      ADMIN_PASSWORD: test_prod_admin_123

      # URLs et CORS
      PUBLIC_URL: http://localhost:8056
      CORS_ENABLED: "true"
      CORS_ORIGIN: "http://localhost:*,http://127.0.0.1:*"
      CORS_CREDENTIALS: "true"

      # Cache avec Dragonfly
      CACHE_ENABLED: "true"
      CACHE_STORE: redis
      REDIS_HOST: dragonfly
      REDIS_PORT: 6379
      REDIS_PASSWORD: test_dragonfly_password_456

      # Upload et storage
      STORAGE_LOCATIONS: local
      STORAGE_LOCAL_ROOT: ./uploads

      # Configuration des images et assets
      ASSETS_TRANSFORM_IMAGE_MAX_DIMENSION: 4000
      ASSETS_TRANSFORM_IMAGE_QUALITY: 85
      ASSETS_TRANSFORM_IMAGE_FORMAT: auto
      ASSETS_TRANSFORM_IMAGE_TRANSFORMS: key
      ASSETS_REQUIRE_AUTHENTICATION: "false"
      
      # Optimisations upload
      FILES_MAX_UPLOAD_SIZE: 100MB
      FILES_MIME_TYPE_ALLOW_LIST: image/jpeg,image/png,image/webp,image/gif,application/pdf,video/mp4

      # Rate limiting
      RATE_LIMITER_ENABLED: "true"
      RATE_LIMITER_STORE: redis
      RATE_LIMITER_REDIS_HOST: dragonfly
      RATE_LIMITER_REDIS_PASSWORD: test_dragonfly_password_456
      RATE_LIMITER_GLOBAL_RATE: 100
      RATE_LIMITER_GLOBAL_DURATION: 60

      # Email (désactivé pour test)
      EMAIL_FROM: noreply@test-prod.local
      EMAIL_TRANSPORT: sendmail

      # Extensions
      EXTENSIONS_PATH: ./extensions
      EXTENSIONS_AUTO_RELOAD: "false"

      # Logs
      LOG_LEVEL: info
      LOG_STYLE: pretty

      # Sécurité
      ACCESS_TOKEN_TTL: 15m
      REFRESH_TOKEN_TTL: 7d
      REFRESH_TOKEN_COOKIE_SECURE: "false"
      REFRESH_TOKEN_COOKIE_SAME_SITE: lax
      REFRESH_TOKEN_COOKIE_NAME: directus_refresh_token

      # Optimisations cache
      CACHE_TTL: 2h
      CACHE_AUTO_PURGE: "true"
      CACHE_SYSTEM_TTL: 4h
      CACHE_SCHEMA: "true"
      CACHE_PERMISSIONS: "true"
      CACHE_VALUE_MAX_SIZE: 32MB
      CACHE_HEALTHCHECK_THRESHOLD: 100
      
      # Optimisations requêtes
      QUERY_LIMIT_DEFAULT: 100
      QUERY_LIMIT_MAX: 2000
      
      # Pool de connexions database
      DB_CONNECTION_TIMEOUT: 30000
      DB_POOL_MIN: 10
      DB_POOL_MAX: 50
      
      # Optimisations assets
      ASSETS_CACHE_TTL: 7d
      ASSETS_TRANSFORM_MAX_CONCURRENT: 8

      # Mode production
      NODE_ENV: production

      # Telemetry
      TELEMETRY: "false"

    volumes:
      - uploads_data:/directus/uploads
      - extensions_data:/directus/extensions
    ports:
      - "8056:8055"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8055/server/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # =================================
  # ADMINER POUR DEBUG
  # =================================
  adminer:
    image: adminer:4.8.1-standalone
    container_name: directus-test-prod-adminer
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: dracula
    ports:
      - "8081:8080"
    networks:
      - backend

volumes:
  postgres_data:
    driver: local
  cache_data:
    driver: local
  uploads_data:
    driver: local
  extensions_data:
    driver: local

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16